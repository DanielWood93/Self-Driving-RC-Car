#! /usr/bin/env python
#
# GUI module generated by PAGE version 4.12
# In conjunction with Tcl version 8.6
#    Apr 05, 2018 04:53:33 PM

# gui to sort and relabel samples from dataset

import sys

try:
    from Tkinter import *
except ImportError:
    from tkinter import *

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import sort_gui_support


def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = Tk()
    top = Sort_Samples_GUI (root)
    sort_gui_support.init(root, top)
    root.mainloop()


w = None
def create_Sort_Samples_GUI(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = Toplevel (root)
    top = Sort_Samples_GUI (w)
    sort_gui_support.init(w, top, *args, **kwargs)
    return (w, top)


def destroy_Sort_Samples_GUI():
    global w
    w.destroy()
    w = None


class Sort_Samples_GUI:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#d9d9d9' # X11 color: 'gray85'

        top.geometry("501x483+1571+448")
        top.title("Sort Samples GUI")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.Canvas1 = Canvas(top)
        self.Canvas1.place(relx=0.0, rely=0.0, relheight=1.0, relwidth=1.0)
        self.Canvas1.configure(background="#d9d9d9")
        self.Canvas1.configure(borderwidth="2")
        self.Canvas1.configure(highlightbackground="#d9d9d9")
        self.Canvas1.configure(highlightcolor="black")
        self.Canvas1.configure(insertbackground="black")
        self.Canvas1.configure(relief=RIDGE)
        self.Canvas1.configure(selectbackground="#c4c4c4")
        self.Canvas1.configure(selectforeground="black")
        self.Canvas1.configure(width=500)

        self.next = Button(self.Canvas1)
        self.next.place(relx=0.76, rely=0.52, height=44, width=107)
        self.next.configure(activebackground="#d9d9d9")
        self.next.configure(activeforeground="#000000")
        self.next.configure(background="#d9d9d9")
        self.next.configure(command=sort_gui_support.next_sample)
        self.next.configure(disabledforeground="#a3a3a3")
        self.next.configure(foreground="#000000")
        self.next.configure(highlightbackground="#d9d9d9")
        self.next.configure(highlightcolor="black")
        self.next.configure(pady="0")
        self.next.configure(text='''Next sample''')

        self.Frame1 = Frame(self.Canvas1)
        self.Frame1.place(relx=0.18, rely=0.23, relheight=0.25, relwidth=0.64)
        self.Frame1.configure(relief=GROOVE)
        self.Frame1.configure(borderwidth="2")
        self.Frame1.configure(relief=GROOVE)
        self.Frame1.configure(background="#d9d9d9")
        self.Frame1.configure(highlightbackground="#d9d9d9")
        self.Frame1.configure(highlightcolor="black")
        self.Frame1.configure(width=405)

        self.sample_number = Label(self.Canvas1)
        self.sample_number.place(relx=0.02, rely=0.02, height=21, width=104)
        self.sample_number.configure(activebackground="#f9f9f9")
        self.sample_number.configure(activeforeground="black")
        self.sample_number.configure(background="#d9d9d9")
        self.sample_number.configure(disabledforeground="#a3a3a3")
        self.sample_number.configure(foreground="#000000")
        self.sample_number.configure(highlightbackground="#d9d9d9")
        self.sample_number.configure(highlightcolor="black")
        self.sample_number.configure(text='''Load a dataset''')

        self.prev = Button(self.Canvas1)
        self.prev.place(relx=0.02, rely=0.52, height=44, width=107)
        self.prev.configure(activebackground="#d9d9d9")
        self.prev.configure(activeforeground="#000000")
        self.prev.configure(background="#d9d9d9")
        self.prev.configure(command=sort_gui_support.prev_sample)
        self.prev.configure(disabledforeground="#a3a3a3")
        self.prev.configure(foreground="#000000")
        self.prev.configure(highlightbackground="#d9d9d9")
        self.prev.configure(highlightcolor="black")
        self.prev.configure(pady="0")
        self.prev.configure(text='''Previous sample''')

        self.good_left = Button(self.Canvas1)
        self.good_left.place(relx=0.22, rely=0.66, height=44, width=87)
        self.good_left.configure(activebackground="#d9d9d9")
        self.good_left.configure(activeforeground="#000000")
        self.good_left.configure(background="#d9d9d9")
        self.good_left.configure(command=sort_gui_support.set_left)
        self.good_left.configure(disabledforeground="#a3a3a3")
        self.good_left.configure(foreground="#000000")
        self.good_left.configure(highlightbackground="#d9d9d9")
        self.good_left.configure(highlightcolor="black")
        self.good_left.configure(pady="0")
        self.good_left.configure(text='''Set left''')

        self.good_forward = Button(self.Canvas1)
        self.good_forward.place(relx=0.42, rely=0.66, height=44, width=87)
        self.good_forward.configure(activebackground="#d9d9d9")
        self.good_forward.configure(activeforeground="#000000")
        self.good_forward.configure(background="#d9d9d9")
        self.good_forward.configure(command=sort_gui_support.set_forward)
        self.good_forward.configure(disabledforeground="#a3a3a3")
        self.good_forward.configure(foreground="#000000")
        self.good_forward.configure(highlightbackground="#d9d9d9")
        self.good_forward.configure(highlightcolor="black")
        self.good_forward.configure(pady="0")
        self.good_forward.configure(text='''Set forward''')

        self.good_right = Button(self.Canvas1)
        self.good_right.place(relx=0.62, rely=0.66, height=44, width=87)
        self.good_right.configure(activebackground="#d9d9d9")
        self.good_right.configure(activeforeground="#000000")
        self.good_right.configure(background="#d9d9d9")
        self.good_right.configure(command=sort_gui_support.set_right)
        self.good_right.configure(disabledforeground="#a3a3a3")
        self.good_right.configure(foreground="#000000")
        self.good_right.configure(highlightbackground="#d9d9d9")
        self.good_right.configure(highlightcolor="black")
        self.good_right.configure(pady="0")
        self.good_right.configure(text='''Set right''')

        self.save_all_separately = Button(self.Canvas1)
        self.save_all_separately.place(relx=0.22, rely=0.89, height=34
                , width=287)
        self.save_all_separately.configure(activebackground="#d9d9d9")
        self.save_all_separately.configure(activeforeground="#000000")
        self.save_all_separately.configure(background="#d9d9d9")
        self.save_all_separately.configure(command=sort_gui_support.save_as_separate_dataset)
        self.save_all_separately.configure(disabledforeground="#a3a3a3")
        self.save_all_separately.configure(foreground="#000000")
        self.save_all_separately.configure(highlightbackground="#d9d9d9")
        self.save_all_separately.configure(highlightcolor="black")
        self.save_all_separately.configure(pady="0")
        self.save_all_separately.configure(text='''Save as separate datasets''')

        self.bad_forward = Button(self.Canvas1)
        self.bad_forward.place(relx=0.22, rely=0.81, height=34, width=287)
        self.bad_forward.configure(activebackground="#d9d9d9")
        self.bad_forward.configure(activeforeground="#000000")
        self.bad_forward.configure(background="#d9d9d9")
        self.bad_forward.configure(command=sort_gui_support.check_collected_samples)
        self.bad_forward.configure(disabledforeground="#a3a3a3")
        self.bad_forward.configure(foreground="#000000")
        self.bad_forward.configure(highlightbackground="#d9d9d9")
        self.bad_forward.configure(highlightcolor="black")
        self.bad_forward.configure(pady="0")
        self.bad_forward.configure(text='''Check collected samples''')
        self.bad_forward.configure(width=287)

        self.Label2 = Label(self.Canvas1)
        self.Label2.place(relx=0.36, rely=0.6, height=21, width=144)
        self.Label2.configure(activebackground="#f9f9f9")
        self.Label2.configure(activeforeground="black")
        self.Label2.configure(background="#d9d9d9")
        self.Label2.configure(disabledforeground="#a3a3a3")
        self.Label2.configure(foreground="#000000")
        self.Label2.configure(highlightbackground="#d9d9d9")
        self.Label2.configure(highlightcolor="black")
        self.Label2.configure(text='''Select a label:''')

        self.Button1 = Button(self.Canvas1)
        self.Button1.place(relx=0.06, rely=0.08, height=34, width=127)
        self.Button1.configure(activebackground="#d9d9d9")
        self.Button1.configure(activeforeground="#000000")
        self.Button1.configure(background="#d9d9d9")
        self.Button1.configure(command=sort_gui_support.load_lefts_dataset)
        self.Button1.configure(disabledforeground="#a3a3a3")
        self.Button1.configure(foreground="#000000")
        self.Button1.configure(highlightbackground="#d9d9d9")
        self.Button1.configure(highlightcolor="black")
        self.Button1.configure(pady="0")
        self.Button1.configure(text='''Load lefts_only''')

        self.Button1_1_1 = Button(self.Canvas1)
        self.Button1_1_1.place(relx=0.38, rely=0.08, height=34, width=127)
        self.Button1_1_1.configure(activebackground="#d9d9d9")
        self.Button1_1_1.configure(activeforeground="#000000")
        self.Button1_1_1.configure(background="#d9d9d9")
        self.Button1_1_1.configure(command=sort_gui_support.load_forwards_dataset)
        self.Button1_1_1.configure(disabledforeground="#a3a3a3")
        self.Button1_1_1.configure(foreground="#000000")
        self.Button1_1_1.configure(highlightbackground="#d9d9d9")
        self.Button1_1_1.configure(highlightcolor="black")
        self.Button1_1_1.configure(pady="0")
        self.Button1_1_1.configure(text='''Load forwards_only''')

        self.Button1_1_1_1 = Button(self.Canvas1)
        self.Button1_1_1_1.place(relx=0.7, rely=0.08, height=34, width=127)
        self.Button1_1_1_1.configure(activebackground="#d9d9d9")
        self.Button1_1_1_1.configure(activeforeground="#000000")
        self.Button1_1_1_1.configure(background="#d9d9d9")
        self.Button1_1_1_1.configure(command=sort_gui_support.load_rights_dataset)
        self.Button1_1_1_1.configure(disabledforeground="#a3a3a3")
        self.Button1_1_1_1.configure(foreground="#000000")
        self.Button1_1_1_1.configure(highlightbackground="#d9d9d9")
        self.Button1_1_1_1.configure(highlightcolor="black")
        self.Button1_1_1_1.configure(pady="0")
        self.Button1_1_1_1.configure(text='''Load rights_only''')

        self.menubar = Menu(top,font="TkMenuFont",bg=_bgcolor,fg=_fgcolor)
        top.configure(menu = self.menubar)


if __name__ == '__main__':
    vp_start_gui()
