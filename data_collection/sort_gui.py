try:
    from Tkinter import *
except ImportError:
    from tkinter import *

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import sort_gui_support


def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = Tk()
    top = Sort_Samples_GUI (root)
    sort_gui_support.init(root, top)
    root.mainloop()

w = None
def create_Sort_Samples_GUI(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = Toplevel(root)
    top = Sort_Samples_GUI(w)
    sort_gui_support.init(w, top, *args, **kwargs)
    return (w, top)


def destroy_Sort_Samples_GUI():
    global w
    w.destroy()
    w = None


class Sort_Samples_GUI:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9'  # X11 color: 'gray85'
        _ana1color = '#d9d9d9'  # X11 color: 'gray85'
        _ana2color = '#d9d9d9'  # X11 color: 'gray85'
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.', background=_bgcolor)
        self.style.configure('.', foreground=_fgcolor)
        self.style.map('.', background=
            [('selected', _compcolor), ('active', _ana2color)])

        top.geometry("614x529+1221+184")
        top.title("Sort Samples GUI")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.Canvas1 = Canvas(top)
        self.Canvas1.place(relx=0.02, rely=0.19, relheight=0.55, relwidth=0.6)
        self.Canvas1.configure(background="#d9d9d9")
        self.Canvas1.configure(borderwidth="2")
        self.Canvas1.configure(highlightbackground="#d9d9d9")
        self.Canvas1.configure(highlightcolor="black")
        self.Canvas1.configure(insertbackground="black")
        self.Canvas1.configure(relief=RIDGE)
        self.Canvas1.configure(selectbackground="#c4c4c4")
        self.Canvas1.configure(selectforeground="black")
        self.Canvas1.configure(width=371)

        self.next_sample = Button(self.Canvas1)
        self.next_sample.place(relx=0.67, rely=0.07, height=44, width=107)
        self.next_sample.configure(activebackground="#d9d9d9")
        self.next_sample.configure(activeforeground="#000000")
        self.next_sample.configure(background="#bff2cc")
        self.next_sample.configure(command=sort_gui_support.next_sample)
        self.next_sample.configure(disabledforeground="#a3a3a3")
        self.next_sample.configure(foreground="#000000")
        self.next_sample.configure(highlightbackground="#d9d9d9")
        self.next_sample.configure(highlightcolor="black")
        self.next_sample.configure(pady="0")
        self.next_sample.configure(text='''Next sample''')

        self.prev_sample = Button(self.Canvas1)
        self.prev_sample.place(relx=0.03, rely=0.07, height=44, width=107)
        self.prev_sample.configure(activebackground="#d9d9d9")
        self.prev_sample.configure(activeforeground="#000000")
        self.prev_sample.configure(background="#bff2cc")
        self.prev_sample.configure(command=sort_gui_support.prev_sample)
        self.prev_sample.configure(disabledforeground="#a3a3a3")
        self.prev_sample.configure(foreground="#000000")
        self.prev_sample.configure(highlightbackground="#d9d9d9")
        self.prev_sample.configure(highlightcolor="black")
        self.prev_sample.configure(pady="0")
        self.prev_sample.configure(text='''Previous sample''')

        self.good_left = Button(self.Canvas1)
        self.good_left.place(relx=0.11, rely=0.35, height=44, width=87)
        self.good_left.configure(activebackground="#d9d9d9")
        self.good_left.configure(activeforeground="#000000")
        self.good_left.configure(background="#faf4b8")
        self.good_left.configure(command=sort_gui_support.set_left)
        self.good_left.configure(disabledforeground="#a3a3a3")
        self.good_left.configure(foreground="#000000")
        self.good_left.configure(highlightbackground="#d9d9d9")
        self.good_left.configure(highlightcolor="black")
        self.good_left.configure(pady="0")
        self.good_left.configure(text='''Set left''')

        self.good_forward = Button(self.Canvas1)
        self.good_forward.place(relx=0.38, rely=0.35, height=44, width=87)
        self.good_forward.configure(activebackground="#d9d9d9")
        self.good_forward.configure(activeforeground="#000000")
        self.good_forward.configure(background="#faf4b8")
        self.good_forward.configure(command=sort_gui_support.set_forward)
        self.good_forward.configure(disabledforeground="#a3a3a3")
        self.good_forward.configure(foreground="#000000")
        self.good_forward.configure(highlightbackground="#d9d9d9")
        self.good_forward.configure(highlightcolor="black")
        self.good_forward.configure(pady="0")
        self.good_forward.configure(text='''Set forward''')

        self.good_right = Button(self.Canvas1)
        self.good_right.place(relx=0.65, rely=0.35, height=44, width=87)
        self.good_right.configure(activebackground="#d9d9d9")
        self.good_right.configure(activeforeground="#000000")
        self.good_right.configure(background="#faf4b8")
        self.good_right.configure(command=sort_gui_support.set_right)
        self.good_right.configure(disabledforeground="#a3a3a3")
        self.good_right.configure(foreground="#000000")
        self.good_right.configure(highlightbackground="#d9d9d9")
        self.good_right.configure(highlightcolor="black")
        self.good_right.configure(pady="0")
        self.good_right.configure(text='''Set right''')

        self.bad_forward = Button(self.Canvas1)
        self.bad_forward.place(relx=0.13, rely=0.83, height=34, width=257)
        self.bad_forward.configure(activebackground="#d9d9d9")
        self.bad_forward.configure(activeforeground="#000000")
        self.bad_forward.configure(background="#d9d9d9")
        self.bad_forward.configure(command=sort_gui_support.check_collected_samples)
        self.bad_forward.configure(disabledforeground="#a3a3a3")
        self.bad_forward.configure(foreground="#000000")
        self.bad_forward.configure(highlightbackground="#d9d9d9")
        self.bad_forward.configure(highlightcolor="black")
        self.bad_forward.configure(pady="0")
        self.bad_forward.configure(text='''Check collected samples''')
        self.bad_forward.configure(width=257)

        self.Label2 = Label(self.Canvas1)
        self.Label2.place(relx=0.35, rely=0.28, height=21, width=104)
        self.Label2.configure(activebackground="#f9f9f9")
        self.Label2.configure(activeforeground="black")
        self.Label2.configure(background="#d9d9d9")
        self.Label2.configure(disabledforeground="#a3a3a3")
        self.Label2.configure(foreground="#000000")
        self.Label2.configure(highlightbackground="#d9d9d9")
        self.Label2.configure(highlightcolor="black")
        self.Label2.configure(text='''Select a label:''')
        self.Label2.configure(width=104)

        self.undo_last_left = Button(self.Canvas1)
        self.undo_last_left.place(relx=0.05, rely=0.59, height=44, width=97)
        self.undo_last_left.configure(activebackground="#d9d9d9")
        self.undo_last_left.configure(activeforeground="#000000")
        self.undo_last_left.configure(background="#ef9a9c")
        self.undo_last_left.configure(command=sort_gui_support.undo_last_left)
        self.undo_last_left.configure(disabledforeground="#a3a3a3")
        self.undo_last_left.configure(foreground="#000000")
        self.undo_last_left.configure(highlightbackground="#d9d9d9")
        self.undo_last_left.configure(highlightcolor="black")
        self.undo_last_left.configure(pady="0")
        self.undo_last_left.configure(text='''Undo last left''')
        self.undo_last_left.configure(width=97)

        self.undo_last_right = Button(self.Canvas1)
        self.undo_last_right.place(relx=0.67, rely=0.59, height=44, width=97)
        self.undo_last_right.configure(activebackground="#d9d9d9")
        self.undo_last_right.configure(activeforeground="#000000")
        self.undo_last_right.configure(background="#ef9a9c")
        self.undo_last_right.configure(command=sort_gui_support.undo_last_right)
        self.undo_last_right.configure(disabledforeground="#a3a3a3")
        self.undo_last_right.configure(foreground="#000000")
        self.undo_last_right.configure(highlightbackground="#d9d9d9")
        self.undo_last_right.configure(highlightcolor="black")
        self.undo_last_right.configure(pady="0")
        self.undo_last_right.configure(text='''Undo last right''')
        self.undo_last_right.configure(width=97)

        self.undo_last_forward = Button(self.Canvas1)
        self.undo_last_forward.place(relx=0.35, rely=0.59, height=44, width=107)
        self.undo_last_forward.configure(activebackground="#d9d9d9")
        self.undo_last_forward.configure(activeforeground="#000000")
        self.undo_last_forward.configure(background="#ef9a9c")
        self.undo_last_forward.configure(command=sort_gui_support.undo_last_forward)
        self.undo_last_forward.configure(disabledforeground="#a3a3a3")
        self.undo_last_forward.configure(foreground="#000000")
        self.undo_last_forward.configure(highlightbackground="#d9d9d9")
        self.undo_last_forward.configure(highlightcolor="black")
        self.undo_last_forward.configure(pady="0")
        self.undo_last_forward.configure(text='''Undo last forward''')
        self.undo_last_forward.configure(width=107)

        self.TSizegrip1 = ttk.Sizegrip(self.Canvas1)
        self.TSizegrip1.place(anchor=SE, relx=1.0, rely=1.0)

        self.menubar = Menu(top, font="TkMenuFont", bg=_bgcolor, fg=_fgcolor)
        top.configure(menu=self.menubar)

        self.LabelFrame_load_dataset = LabelFrame(top)
        self.LabelFrame_load_dataset.place(relx=0.02, rely=0.02, relheight=0.14, relwidth=0.6)
        self.LabelFrame_load_dataset.configure(relief=GROOVE)
        self.LabelFrame_load_dataset.configure(foreground="black")
        self.LabelFrame_load_dataset.configure(text='''Load Dataset''')
        self.LabelFrame_load_dataset.configure(background="#d9d9d9")
        self.LabelFrame_load_dataset.configure(highlightbackground="#f0f0f0f0f0f0")
        self.LabelFrame_load_dataset.configure(width=370)

        self.load_lefts = Button(self.LabelFrame_load_dataset)
        self.load_lefts.place(relx=0.03, rely=0.36, height=34, width=107, y=-12)
        self.load_lefts.configure(activebackground="#d9d9d9")
        self.load_lefts.configure(activeforeground="#000000")
        self.load_lefts.configure(background="#d9d9d9")
        self.load_lefts.configure(command=sort_gui_support.load_lefts_dataset)
        self.load_lefts.configure(disabledforeground="#a3a3a3")
        self.load_lefts.configure(foreground="#000000")
        self.load_lefts.configure(highlightbackground="#d9d9d9")
        self.load_lefts.configure(highlightcolor="black")
        self.load_lefts.configure(pady="0")
        self.load_lefts.configure(text='''lefts_only''')
        self.load_lefts.configure(width=107)

        self.load_forwards = Button(self.LabelFrame_load_dataset)
        self.load_forwards.place(relx=0.35, rely=0.36, height=34, width=107, y=-12)
        self.load_forwards.configure(activebackground="#d9d9d9")
        self.load_forwards.configure(activeforeground="#000000")
        self.load_forwards.configure(background="#d9d9d9")
        self.load_forwards.configure(command=sort_gui_support.load_forwards_dataset)
        self.load_forwards.configure(disabledforeground="#a3a3a3")
        self.load_forwards.configure(foreground="#000000")
        self.load_forwards.configure(highlightbackground="#d9d9d9")
        self.load_forwards.configure(highlightcolor="black")
        self.load_forwards.configure(pady="0")
        self.load_forwards.configure(text='''forwards_only''')
        self.load_forwards.configure(width=107)

        self.load_rights = Button(self.LabelFrame_load_dataset)
        self.load_rights.place(relx=0.68, rely=0.36, height=34, width=107, y=-12)

        self.load_rights.configure(activebackground="#d9d9d9")
        self.load_rights.configure(activeforeground="#000000")
        self.load_rights.configure(background="#d9d9d9")
        self.load_rights.configure(command=sort_gui_support.load_rights_dataset)
        self.load_rights.configure(disabledforeground="#a3a3a3")
        self.load_rights.configure(foreground="#000000")
        self.load_rights.configure(highlightbackground="#d9d9d9")
        self.load_rights.configure(highlightcolor="black")
        self.load_rights.configure(pady="0")
        self.load_rights.configure(text='''rights_only''')
        self.load_rights.configure(width=107)

        self.LabelFrame_save_datasets = LabelFrame(top)
        self.LabelFrame_save_datasets.place(relx=0.02, rely=0.76, relheight=0.24, relwidth=0.6)
        self.LabelFrame_save_datasets.configure(relief=GROOVE)
        self.LabelFrame_save_datasets.configure(foreground="black")
        self.LabelFrame_save_datasets.configure(text='''Save Datasets''')
        self.LabelFrame_save_datasets.configure(background="#d9d9d9")
        self.LabelFrame_save_datasets.configure(highlightbackground="#f0f0f0f0f0f0")
        self.LabelFrame_save_datasets.configure(highlightcolor="black")
        self.LabelFrame_save_datasets.configure(width=370)

        self.save_all_separately_1 = Button(self.LabelFrame_save_datasets)
        self.save_all_separately_1.place(relx=0.03, rely=0.62, height=34, width=347, y=-12)
        self.save_all_separately_1.configure(activebackground="#d9d9d9")
        self.save_all_separately_1.configure(activeforeground="#000000")
        self.save_all_separately_1.configure(background="#d9d9d9")
        self.save_all_separately_1.configure(command=sort_gui_support.save_as_separate_datasets)
        self.save_all_separately_1.configure(disabledforeground="#a3a3a3")
        self.save_all_separately_1.configure(foreground="#000000")
        self.save_all_separately_1.configure(highlightbackground="#d9d9d9")
        self.save_all_separately_1.configure(highlightcolor="black")
        self.save_all_separately_1.configure(pady="0")
        self.save_all_separately_1.configure(text='''Save as 3 separate datasets''')
        self.save_all_separately_1.configure(width=347)

        self.save_lefts_only = Button(self.LabelFrame_save_datasets)
        self.save_lefts_only.place(relx=0.03, rely=0.22, height=34, width=97, y=-12)
        self.save_lefts_only.configure(activebackground="#d9d9d9")
        self.save_lefts_only.configure(activeforeground="#000000")
        self.save_lefts_only.configure(background="#d9d9d9")
        self.save_lefts_only.configure(command=sort_gui_support.save_lefts_only)
        self.save_lefts_only.configure(disabledforeground="#a3a3a3")
        self.save_lefts_only.configure(foreground="#000000")
        self.save_lefts_only.configure(highlightbackground="#d9d9d9")
        self.save_lefts_only.configure(highlightcolor="black")
        self.save_lefts_only.configure(pady="0")
        self.save_lefts_only.configure(text='''Save lefts only''')
        self.save_lefts_only.configure(width=97)

        self.save_rights_only = Button(self.LabelFrame_save_datasets)
        self.save_rights_only.place(relx=0.7, rely=0.22, height=34, width=97, y=-12)
        self.save_rights_only.configure(activebackground="#d9d9d9")
        self.save_rights_only.configure(activeforeground="#000000")
        self.save_rights_only.configure(background="#d9d9d9")
        self.save_rights_only.configure(command=sort_gui_support.save_rights_only)
        self.save_rights_only.configure(disabledforeground="#a3a3a3")
        self.save_rights_only.configure(foreground="#000000")
        self.save_rights_only.configure(highlightbackground="#d9d9d9")
        self.save_rights_only.configure(highlightcolor="black")
        self.save_rights_only.configure(pady="0")
        self.save_rights_only.configure(text='''Save rights only''')
        self.save_rights_only.configure(width=97)

        self.save_forwards_only = Button(self.LabelFrame_save_datasets)
        self.save_forwards_only.place(relx=0.32, rely=0.22, height=34, width=127, y=-12)
        self.save_forwards_only.configure(activebackground="#d9d9d9")
        self.save_forwards_only.configure(activeforeground="#000000")
        self.save_forwards_only.configure(background="#d9d9d9")
        self.save_forwards_only.configure(command=sort_gui_support.save_forwards_only)
        self.save_forwards_only.configure(disabledforeground="#a3a3a3")
        self.save_forwards_only.configure(foreground="#000000")
        self.save_forwards_only.configure(highlightbackground="#d9d9d9")
        self.save_forwards_only.configure(highlightcolor="black")
        self.save_forwards_only.configure(pady="0")
        self.save_forwards_only.configure(text='''Save forwards only''')
        self.save_forwards_only.configure(width=127)

        self.Frame1 = Frame(top)
        self.Frame1.place(relx=0.67, rely=0.04, relheight=0.84, relwidth=0.32)
        self.Frame1.configure(relief=GROOVE)
        self.Frame1.configure(borderwidth="2")
        self.Frame1.configure(relief=GROOVE)
        self.Frame1.configure(background="#d9d9d9")
        self.Frame1.configure(width=195)

        self.LabelFrame_load_datasets_2 = LabelFrame(self.Frame1)
        self.LabelFrame_load_datasets_2.place(relx=0.05, rely=0.03, relheight=0.39, relwidth=0.87)
        self.LabelFrame_load_datasets_2.configure(relief=GROOVE)
        self.LabelFrame_load_datasets_2.configure(foreground="black")
        self.LabelFrame_load_datasets_2.configure(text='''Load Dataset''')
        self.LabelFrame_load_datasets_2.configure(background="#d9d9d9")
        self.LabelFrame_load_datasets_2.configure(highlightbackground="#f0f0f0f0f0f0")
        self.LabelFrame_load_datasets_2.configure(highlightcolor="black")
        self.LabelFrame_load_datasets_2.configure(width=170)

        self.load_dataset_1 = Button(self.LabelFrame_load_datasets_2)
        self.load_dataset_1.place(relx=0.06, rely=0.15, height=34, width=147
                , y=-12)
        self.load_dataset_1.configure(activebackground="#d9d9d9")
        self.load_dataset_1.configure(activeforeground="#000000")
        self.load_dataset_1.configure(background="#d9d9d9")
        self.load_dataset_1.configure(command=sort_gui_support.load_dataset_1)
        self.load_dataset_1.configure(disabledforeground="#a3a3a3")
        self.load_dataset_1.configure(foreground="#000000")
        self.load_dataset_1.configure(highlightbackground="#d9d9d9")
        self.load_dataset_1.configure(highlightcolor="black")
        self.load_dataset_1.configure(pady="0")
        self.load_dataset_1.configure(text='''dataset 1''')

        self.load_dataset_2 = Button(self.LabelFrame_load_datasets_2)
        self.load_dataset_2.place(relx=0.06, rely=0.44, height=34, width=147, y=-12)
        self.load_dataset_2.configure(activebackground="#d9d9d9")
        self.load_dataset_2.configure(activeforeground="#000000")
        self.load_dataset_2.configure(background="#d9d9d9")
        self.load_dataset_2.configure(command=sort_gui_support.load_dataset_2)
        self.load_dataset_2.configure(disabledforeground="#a3a3a3")
        self.load_dataset_2.configure(foreground="#000000")
        self.load_dataset_2.configure(highlightbackground="#d9d9d9")
        self.load_dataset_2.configure(highlightcolor="black")
        self.load_dataset_2.configure(pady="0")
        self.load_dataset_2.configure(text='''dataset 2''')

        self.load_dataset_3 = Button(self.LabelFrame_load_datasets_2)
        self.load_dataset_3.place(relx=0.06, rely=0.73, height=34, width=147, y=-12)
        self.load_dataset_3.configure(activebackground="#d9d9d9")
        self.load_dataset_3.configure(activeforeground="#000000")
        self.load_dataset_3.configure(background="#d9d9d9")
        self.load_dataset_3.configure(command=sort_gui_support.load_dataset_3)
        self.load_dataset_3.configure(disabledforeground="#a3a3a3")
        self.load_dataset_3.configure(foreground="#000000")
        self.load_dataset_3.configure(highlightbackground="#d9d9d9")
        self.load_dataset_3.configure(highlightcolor="black")
        self.load_dataset_3.configure(pady="0")
        self.load_dataset_3.configure(text='''dataset 3''')

        self.Labelframe_dataset_tools = LabelFrame(self.Frame1)
        self.Labelframe_dataset_tools.place(relx=0.05, rely=0.5, relheight=0.46, relwidth=0.87)
        self.Labelframe_dataset_tools.configure(relief=GROOVE)
        self.Labelframe_dataset_tools.configure(foreground="black")
        self.Labelframe_dataset_tools.configure(text='''Dataset Tools''')
        self.Labelframe_dataset_tools.configure(background="#d9d9d9")
        self.Labelframe_dataset_tools.configure(highlightbackground="#d9d9d9")
        self.Labelframe_dataset_tools.configure(highlightcolor="black")
        self.Labelframe_dataset_tools.configure(width=170)

        self.flip_and_duplicate = Button(self.Labelframe_dataset_tools)
        self.flip_and_duplicate.place(relx=0.06, rely=0.15, height=34, width=146, y=-12)
        self.flip_and_duplicate.configure(activebackground="#d9d9d9")
        self.flip_and_duplicate.configure(activeforeground="#000000")
        self.flip_and_duplicate.configure(background="#d9d9d9")
        self.flip_and_duplicate.configure(command=sort_gui_support.flip_and_duplicate)
        self.flip_and_duplicate.configure(disabledforeground="#a3a3a3")
        self.flip_and_duplicate.configure(foreground="#000000")
        self.flip_and_duplicate.configure(highlightbackground="#d9d9d9")
        self.flip_and_duplicate.configure(highlightcolor="black")
        self.flip_and_duplicate.configure(pady="0")
        self.flip_and_duplicate.configure(text='''Flip & duplicate images''')

        self.convert_to_rgb = Button(self.Labelframe_dataset_tools)
        self.convert_to_rgb.place(relx=0.06, rely=0.42, height=34, width=146, y=-12)
        self.convert_to_rgb.configure(activebackground="#d9d9d9")
        self.convert_to_rgb.configure(activeforeground="#000000")
        self.convert_to_rgb.configure(background="#d9d9d9")
        self.convert_to_rgb.configure(command=sort_gui_support.convert_to_rgb)
        self.convert_to_rgb.configure(disabledforeground="#a3a3a3")
        self.convert_to_rgb.configure(foreground="#000000")
        self.convert_to_rgb.configure(highlightbackground="#d9d9d9")
        self.convert_to_rgb.configure(highlightcolor="black")
        self.convert_to_rgb.configure(pady="0")
        self.convert_to_rgb.configure(text='''Convert to RGB''')

        self.dataset_tools_save = Button(self.Labelframe_dataset_tools)
        self.dataset_tools_save.place(relx=0.06, rely=0.77, height=34, width=146, y=-12)
        self.dataset_tools_save.configure(activebackground="#d9d9d9")
        self.dataset_tools_save.configure(activeforeground="#000000")
        self.dataset_tools_save.configure(background="#d9d9d9")
        self.dataset_tools_save.configure(command=sort_gui_support.dataset_tools_save)
        self.dataset_tools_save.configure(disabledforeground="#a3a3a3")
        self.dataset_tools_save.configure(foreground="#000000")
        self.dataset_tools_save.configure(highlightbackground="#d9d9d9")
        self.dataset_tools_save.configure(highlightcolor="black")
        self.dataset_tools_save.configure(pady="0")
        self.dataset_tools_save.configure(text='''Save''')

    @staticmethod
    def popup1(event):
        Popupmenu1 = Menu(root, tearoff=0)
        Popupmenu1.configure(activebackground="#f9f9f9")
        Popupmenu1.configure(activeborderwidth="1")
        Popupmenu1.configure(activeforeground="black")
        Popupmenu1.configure(background="#d9d9d9")
        Popupmenu1.configure(borderwidth="1")
        Popupmenu1.configure(disabledforeground="#a3a3a3")
        Popupmenu1.configure(font="{Segoe UI} 9")
        Popupmenu1.configure(foreground="black")
        Popupmenu1.post(event.x_root, event.y_root)

    @staticmethod
    def popup2(event):
        Popupmenu2 = Menu(root, tearoff=0)
        Popupmenu2.configure(activebackground="#f9f9f9")
        Popupmenu2.configure(activeborderwidth="1")
        Popupmenu2.configure(activeforeground="black")
        Popupmenu2.configure(background="#d9d9d9")
        Popupmenu2.configure(borderwidth="1")
        Popupmenu2.configure(disabledforeground="#a3a3a3")
        Popupmenu2.configure(font="{Segoe UI} 9")
        Popupmenu2.configure(foreground="black")
        Popupmenu2.post(event.x_root, event.y_root)


if __name__ == '__main__':
    vp_start_gui()
